/*
 * This Scala source file was generated by the Gradle 'init' task.
 */
package ru.vladbakumenko

import akka.actor.ActorSystem
import akka.cluster.Cluster
import javafx.application.Application
import javafx.fxml.FXMLLoader
import javafx.scene.Scene
import javafx.scene.layout.AnchorPane
import javafx.stage.Stage
import ru.vladbakumenko.actors.ClusterListener
import ru.vladbakumenko.ui.connection.ConnectionControllerImpl

object App {

  def main(args: Array[String]): Unit = {
    Application.launch(classOf[App], args: _*)
  }
}

class App extends Application {
  private val system = ActorSystem.create("ClusterSystem")
  private val cluster = Cluster(system)
  private val clusterListener = system.actorOf(ClusterListener.getProps(cluster), "listener")

  override def start(primaryStage: Stage): Unit = {
    primaryStage.setTitle("Твой хост: " + cluster.selfAddress.host.get + " и порт: " + cluster.selfAddress.port.get)
    primaryStage.setOnCloseRequest(_ => system.terminate())

    showConnectionWindow(primaryStage)
  }

  private def showConnectionWindow(stage: Stage): Unit = {
    val loader = new FXMLLoader()
    loader.setLocation(getClass.getResource("/fxml/Connection.fxml"))
    val rootLayout: AnchorPane = loader.load
    val scene = new Scene(rootLayout, 450, 300)

    val controller: ConnectionControllerImpl = loader.getController
    controller.getConnectionModel.clusterListener = clusterListener
    controller.getConnectionModel.clusterAddress = cluster.selfAddress
    controller.getConnectionModel.stage = stage
    controller.getConnectionModel.system = system

    stage.setScene(scene)
    stage.show()
  }
}
